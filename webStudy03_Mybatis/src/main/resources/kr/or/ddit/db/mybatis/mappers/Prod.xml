<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">
	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prodId" column="PROD_ID"/>
		<collection property="memberList" ofType="MemberVO" autoMapping="true">
			<id property="memId" column="MEM_ID"/>
		</collection>
	</resultMap>
	<sql id="sameCondition">
		FROM PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
				  INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
		<trim prefix=" WHERE " prefixOverrides="AND">
			<if test="detailSearch!=null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.prodLgu)">
					AND PROD_LGU = #{detailSearch.prodLgu}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.prodBuyer)">
					AND PROD_BUYER = #{detailSearch.prodBuyer}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.prodName)">
					AND INSTR(PROD_NAME, #{detailSearch.prodName}) > 0
				</if>
				
			</if>
		</trim>
	</sql>
	<select id="selectProd" resultMap="prodMap" parameterType="string">
		WITH CARTMEM AS
		(
		SELECT DISTINCT CART_PROD, MEM_ID
		    , MEM_NAME, MEM_HP, MEM_MAIL, MEM_MILEAGE
		FROM CART INNER JOIN MEMBER ON (CART_MEMBER = MEM_ID)
		), PRODALL AS(
		    SELECT prod_id, prod_name, prod_lgu, 
				   prod_buyer, prod_cost, prod_price, prod_sale,
				   prod_outline, prod_detail, prod_img, prod_totalstock, 
				   TO_CHAR(prod_insdate, 'YYYY-MM-DD') PROD_INSDATE,
				   prod_properstock, prod_size, prod_color, prod_delivery,
				   prod_unit, prod_qtyin, prod_qtysale, prod_mileage
				   , LPROD_NM
				   , BUYER_NAME "buyer.buyerName", BUYER_CHARGER "buyer.buyerCharger", BUYER_ADD1 "buyer.buyerAdd1"
		    FROM PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
		              INNER JOIN BUYER ON (BUYER_ID = PROD_BUYER)
		)
		SELECT PRODALL.*, CARTMEM.*
		FROM PRODALL LEFT OUTER JOIN CARTMEM ON (PROD_ID = CART_PROD)
		WHERE PROD_ID = #{PROD_ID}
	</select>
	
	<select id="selectProdList" parameterType="PagingVO" resultType="ProdVO">
		WITH PRODALL AS(
			SELECT PROD_ID, PROD_NAME, PROD_LGU,
				   PROD_COST, PROD_PRICE, PROD_MILEAGE
				   , LPROD_NM
				   , BUYER_NAME "buyer.buyerName"
			<include refid = "sameCondition" />
			ORDER BY PROD_LGU ASC , PROD_ID DESC
		)
		SELECT A.* FROM
			(SELECT ROWNUM RNUM, PRODALL.*
			FROM PRODALL
			) A WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="selectTotalRecord" parameterType="PagingVO" resultType="int">
		SELECT COUNT(*)
		<include refid="sameCondition" />
	</select>
	
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey order="BEFORE" resultType="string" keyProperty="prodId">
			SELECT #{prodLgu} || LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID),5)),0)+1, 6, '0')
			FROM PROD
			WHERE PROD_LGU = #{prodLgu}
		</selectKey>
		INSERT INTO PROD (
				PROD_ID,
				PROD_NAME,
				PROD_LGU,
				PROD_BUYER,
				PROD_COST,
				PROD_PRICE,
				PROD_SALE,
				PROD_OUTLINE,
				PROD_DETAIL,
				PROD_IMG,
				PROD_TOTALSTOCK,
				PROD_INSDATE,
				PROD_PROPERSTOCK,
				PROD_SIZE,
				PROD_COLOR,
				PROD_DELIVERY,
				PROD_UNIT,
				PROD_QTYIN,
				PROD_QTYSALE
						)
		VALUES( #{prodId},
				#{prodName},
				#{prodLgu},
				#{prodBuyer},
				#{prodCost},
				#{prodPrice},
				#{prodSale},
				#{prodOutline},
				#{prodDetail},
				#{prodImg},
				#{prodTotalstock},
				TO_DATE(#{prodInsdate, jdbcType=DATE}, 'YYYY-MM-DD'),
				#{prodProperstock},
				#{prodSize},
				#{prodColor},
				#{prodDelivery},
				#{prodUnit},
				#{prodQtyin},
				#{prodQtysale})
	</insert>
	
	<update id="updateProd" parameterType="ProdVO">
		UPDATE PROD SET 
				PROD_NAME        = #{prodName, jdbcType=VARCHAR},
				PROD_COST        = #{prodCost, jdbcType=INTEGER},
				PROD_PRICE       = #{prodPrice, jdbcType=INTEGER},
				PROD_SALE        = #{prodSale, jdbcType=INTEGER},
				PROD_OUTLINE     = #{prodOutline, jdbcType=VARCHAR},
				PROD_DETAIL      = #{prodDetail, jdbcType=VARCHAR},
				PROD_IMG         = #{prodImg, jdbcType=VARCHAR},
				PROD_TOTALSTOCK  = #{prodTotalstock, jdbcType=INTEGER},
				PROD_INSDATE     = TO_DATE(#{prodInsdate, jdbcType=DATE}, 'YYYY-MM-DD'),
				PROD_PROPERSTOCK = #{prodProperstock, jdbcType=INTEGER},
				PROD_SIZE        = #{prodSize, jdbcType=VARCHAR},
				PROD_COLOR       = #{prodColor, jdbcType=VARCHAR},
				PROD_DELIVERY    = #{prodDelivery, jdbcType=VARCHAR},
				PROD_UNIT        = #{prodUnit, jdbcType=INTEGER},
				PROD_QTYIN       = #{prodQtyin, jdbcType=INTEGER},
				PROD_QTYSALE     = #{prodQtysale, jdbcType=INTEGER}
		WHERE PROD_ID = #{prodId}
	</update>
	
</mapper>